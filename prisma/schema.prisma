generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // url          = env("PRISMA_DATABASE_URL") // Uncomment b4 git push OR pnpm live (Prisma Data Platform must see this value in GitHub)
  // url          = env("DEV_DATABASE_URL") // Uncomment during development IF desire is to point to dev database (during schema change)
  url          = env("PROD_DATABASE_URL") // Uncomment during development IF desire is to point to production database (see prod data)
  relationMode = "prisma"
}

model User {
  id                     String    @id @default(uuid())
  role                   Role      @default(Customer)
  email                  String?   @unique
  firstName              String?   @db.VarChar(255)
  lastName               String?   @db.VarChar(255)
  isNewsletterSubscriber Boolean   @default(false)
  sessions               Session[]
  primaryImageId         String?
  createdAt              DateTime  @default(now())
  posts                  Post[]

  @@index([email])
}

enum Role {
  Staff
  Customer
}

model Post {
  id        String   @id @default(uuid())
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creator   User     @relation(fields: [creatorId], references: [id])
  creatorId String

  @@index([creatorId])
}

model Session {
  id                String   @id @default(uuid())
  user              User     @relation(fields: [userId], references: [id])
  userId            String
  ipAddress         String   @db.VarChar(255)
  accessExpiration  DateTime
  refreshExpiration DateTime

  @@index([userId])
}

model Source {
  id                  String        @id @default(uuid())
  title               String        @unique @db.VarChar(255)
  slug                String        @unique @db.VarChar(255)
  url                 String        @db.VarChar(255)
  urlType             SourceUrlType @default(PUBMED)
  publicationLocation String?       @db.VarChar(255)
  publicationYear     Int?          @db.Year
  favoriteQuotes      Quote[]
  authors             Author[]
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt

  @@index([createdAt, updatedAt])
}

enum SourceUrlType {
  PUBMED
  ACADEMIA
}

model Author {
  id      String   @id @default(uuid())
  name    String   @unique @db.VarChar(255)
  slug    String   @unique @db.VarChar(255)
  sources Source[]
}

model Quote {
  id           String          @id @default(uuid())
  text         String          @db.Text
  displayOrder Int             @default(0)
  Source       Source          @relation(fields: [sourceId], references: [id])
  sourceId     String
  categories   QuoteCategory[]

  @@index([sourceId])
}

model QuoteCategory {
  id     String  @id @default(uuid())
  name   String  @unique @db.VarChar(255)
  slug   String  @unique @db.VarChar(255)
  quotes Quote[]

  @@index([name])
}

model SiteComment {
  id        String   @id @default(uuid())
  firstName String   @db.VarChar(255)
  lastName  String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  comment   String   @db.Text
  createdAt DateTime @default(now())
}
